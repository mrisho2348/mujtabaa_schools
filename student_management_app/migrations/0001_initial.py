# Generated by Django 4.2.1 on 2023-08-17 20:40

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'HOD'), (2, 'Staff'), (3, 'Student'), (4, 'SchoolDriver'), (5, 'SchoolSecurityPerson'), (6, 'Cooker'), (7, 'SchoolCleaner'), (8, 'Parent')], default=1, max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('make', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('license_plate', models.CharField(blank=True, max_length=20, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('grade_level', models.CharField(max_length=10)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('room_number', models.CharField(blank=True, max_length=10, null=True)),
                ('building', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('class_rules', models.TextField(blank=True, null=True)),
                ('class_events', models.TextField(blank=True, null=True)),
                ('additional_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cooker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='cooker_profiles/')),
                ('is_active', models.BooleanField(default=True)),
                ('cooking_shift_hours', models.CharField(blank=True, max_length=50, null=True)),
                ('uniform_size', models.CharField(blank=True, max_length=10, null=True)),
                ('special_dietary_requirements', models.TextField(blank=True, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('performance_ratings', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('assigned_classrooms', models.ManyToManyField(blank=True, related_name='cooking_staff', to='student_management_app.classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Meetings',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('location', models.CharField(max_length=255)),
                ('agenda', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDriver',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('license_number', models.CharField(max_length=20)),
                ('contact_number', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('address', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='driver_profiles/')),
                ('driving_license_photo', models.ImageField(blank=True, null=True, upload_to='driver_licenses/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SessionYearModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('session_start_year', models.DateField()),
                ('session_end_year', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Staffs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.TextField()),
                ('surname', models.TextField(blank=True)),
                ('street_address', models.TextField(blank=True)),
                ('house_number', models.TextField(blank=True)),
                ('gender', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_of_birth', models.DateField(blank=True, default='2000-01-01')),
                ('contact_number', models.CharField(blank=True, max_length=20)),
                ('background_check', models.TextField(blank=True)),
                ('availability', models.CharField(blank=True, max_length=255)),
                ('preferred_grade_level', models.CharField(blank=True, max_length=255, null=True)),
                ('salary_expectations', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_pic', models.FileField(blank=True, null=True, upload_to='')),
                ('national_identity_number', models.TextField(blank=True, null=True)),
                ('national_id_photo', models.FileField(blank=True, null=True, upload_to='')),
                ('birth_certificate_photo', models.FileField(blank=True, null=True, upload_to='')),
                ('personal_statement', models.TextField(blank=True)),
                ('fcm_token', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('school_segment', models.CharField(blank=True, max_length=255, null=True)),
                ('subject_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staff_subjects', to='student_management_app.staffs')),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('surname', models.CharField(max_length=100)),
                ('service_type', models.CharField(blank=True, default='school', max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(max_length=10)),
                ('phone_number', models.CharField(max_length=20)),
                ('school_segment', models.CharField(max_length=100)),
                ('current_class', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('birth_certificate_id', models.CharField(max_length=100)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('current_year', models.IntegerField(blank=True, null=True)),
                ('is_finished', models.BooleanField(default=False)),
                ('address', models.CharField(max_length=200)),
                ('street_address', models.CharField(max_length=200)),
                ('house_number', models.CharField(max_length=20)),
                ('health_status', models.CharField(max_length=200)),
                ('physical_disability', models.CharField(max_length=200)),
                ('profile_pic', models.FileField(blank=True, null=True, upload_to='')),
                ('birth_certificate_photo', models.FileField(blank=True, null=True, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='student_management_app.sessionyearmodel')),
                ('subjects', models.ManyToManyField(blank=True, related_name='students', to='student_management_app.subject')),
            ],
        ),
        migrations.AddField(
            model_name='staffs',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='staffs_subjects', to='student_management_app.subject'),
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_expertise', models.TextField(blank=True, null=True)),
                ('teaching_methods', models.TextField(blank=True, null=True)),
                ('professional_development', models.TextField(blank=True, null=True)),
                ('language_proficiency', models.TextField(blank=True, null=True)),
                ('technology_skills', models.TextField(blank=True, null=True)),
                ('certificate_url', models.FileField(blank=True, null=True, upload_to='')),
                ('special_skills', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.staffs')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolSecurityPerson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='security_person_profiles/')),
                ('is_active', models.BooleanField(default=True)),
                ('security_clearance_expiry', models.DateField(blank=True, null=True)),
                ('patrol_area', models.CharField(blank=True, max_length=100, null=True)),
                ('security_training_courses', models.TextField(blank=True, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('shift_start_time', models.TimeField(blank=True, null=True)),
                ('shift_end_time', models.TimeField(blank=True, null=True)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('uniform_size', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vehicle_assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='student_management_app.car')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDriverVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personal_vehicle_information', models.TextField(blank=True, null=True)),
                ('vehicle_registration_number', models.CharField(blank=True, max_length=20, null=True)),
                ('vehicle_maintenance_records', models.TextField(blank=True, null=True)),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_info', to='student_management_app.schooldriver')),
                ('vehicle_assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='student_management_app.car')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDriverReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_name', models.CharField(max_length=100)),
                ('reference_contact', models.CharField(max_length=20)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='student_management_app.schooldriver')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDriverMedicalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_group', models.CharField(blank=True, max_length=5, null=True)),
                ('medical_conditions', models.TextField(blank=True, null=True)),
                ('health_condition', models.TextField(blank=True, null=True)),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_info', to='student_management_app.schooldriver')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDriverLicenseInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_type', models.CharField(blank=True, max_length=20, null=True)),
                ('drivers_license_expiry_reminder', models.DateField(blank=True, null=True)),
                ('additional_licenses', models.TextField(blank=True, null=True)),
                ('certification', models.CharField(blank=True, max_length=100, null=True)),
                ('driver_training_certifications', models.TextField(blank=True, null=True)),
                ('experience_in_transportation', models.CharField(blank=True, max_length=100, null=True)),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='license_info', to='student_management_app.schooldriver')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDriverLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=50)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages_spoken', to='student_management_app.schooldriver')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDriverEmployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('employment_start_date', models.DateField(blank=True, null=True)),
                ('employment_end_date', models.DateField(blank=True, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_information', models.TextField(blank=True, null=True)),
                ('performance_ratings', models.TextField(blank=True, null=True)),
                ('shift_schedule', models.CharField(blank=True, max_length=100, null=True)),
                ('driving_hours', models.CharField(blank=True, max_length=100, null=True)),
                ('uniform_size', models.CharField(blank=True, max_length=10, null=True)),
                ('uniform_issued_date', models.DateField(blank=True, null=True)),
                ('uniform_return_date', models.DateField(blank=True, null=True)),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employment_info', to='student_management_app.schooldriver')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDriverEmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contact_info', to='student_management_app.schooldriver')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDriverContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alternate_contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact_info', to='student_management_app.schooldriver')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolCleaner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='cleaner_profiles/')),
                ('cleaning_shift_hours', models.CharField(blank=True, max_length=50, null=True)),
                ('uniform_size', models.CharField(blank=True, max_length=10, null=True)),
                ('cleaning_duties', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('performance_ratings', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('assigned_classrooms', models.ManyToManyField(blank=True, related_name='cleaning_staff', to='student_management_app.classroom')),
            ],
        ),
        migrations.CreateModel(
            name='References',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('staff_position', models.TextField(blank=True, null=True)),
                ('company_name', models.TextField(blank=True, null=True)),
                ('company_address', models.TextField(blank=True, null=True)),
                ('company_contact_person', models.TextField(blank=True, null=True)),
                ('company_contact_email', models.TextField(blank=True, null=True)),
                ('company_contact_phone', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.staffs')),
            ],
        ),
        migrations.CreateModel(
            name='Qualifications',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('teaching_experience', models.IntegerField(blank=True, null=True)),
                ('educational_qualification', models.CharField(max_length=255)),
                ('certification', models.CharField(max_length=255)),
                ('cv', models.FileField(blank=True, null=True, upload_to='')),
                ('other_certificates', models.FileField(blank=True, null=True, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.staffs')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=20)),
                ('occupation', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('street_address', models.CharField(max_length=100)),
                ('house_number', models.CharField(max_length=10)),
                ('national_id', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('parent_type', models.CharField(choices=[('parent', 'Parent'), ('guardian', 'Guardian'), ('sponsor', 'Sponsor')], max_length=20)),
                ('fcm_token', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ManyToManyField(related_name='parent', to='student_management_app.students')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.students')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStaff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.staffs')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationSchoolSecurityPerson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('security_person_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.schoolsecurityperson')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationSchoolDriver',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.schooldriver')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationSchoolCleaner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cleaner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.schoolcleaner')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationParent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.parent')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationCooker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cooker_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.cooker')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.DateTimeField(auto_now_add=True)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.students')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportStaffs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.DateTimeField(auto_now_add=True)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.staffs')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportSchoolSecurityPerson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.DateTimeField(auto_now_add=True)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('security_person_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.schoolsecurityperson')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportSchoolDriver',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.DateTimeField(auto_now_add=True)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.schooldriver')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportSchoolCleaner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.DateTimeField(auto_now_add=True)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cleaner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.schoolcleaner')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportParent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.DateTimeField(auto_now_add=True)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.parent')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReportCooker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_date', models.DateTimeField(auto_now_add=True)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cooker_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.cooker')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStudent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.students')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStaff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.staffs')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackSchoolSecurityPerson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('security_person_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.schoolsecurityperson')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackSchoolDriver',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.schooldriver')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackSchoolCleaner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cleaner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.schoolcleaner')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackParent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.parent')),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackCooker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_reply', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('cooker_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.cooker')),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('employment_history', models.TextField(blank=True, null=True)),
                ('company_name', models.TextField(null=True)),
                ('company_address', models.TextField(blank=True, null=True)),
                ('position', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, default='2000-01-01')),
                ('end_date', models.DateField(blank=True, default='2000-01-01')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.staffs')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='student_management_app.schooldriver'),
        ),
        migrations.CreateModel(
            name='Attendees',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meeting_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.meetings')),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.staffs')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('attendance_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.attendance')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.students')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='session_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_management_app.sessionyearmodel'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='subject_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student_management_app.subject'),
        ),
        migrations.CreateModel(
            name='AdminHOD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
